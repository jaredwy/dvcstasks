<?xml version="1.0" encoding="UTF-8"?>
<!-- Spring context for Managers and Data Access Objects -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:plugin="http://atlassian.com/schema/spring/plugin"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://atlassian.com/schema/spring/plugin http://atlassian.com/schema/spring/plugin.xsd">

  <bean id="planExecutionManager" class="com.atlassian.bamboo.plan.PlanExecutionManagerImpl" plugin:available="true">
    <constructor-arg ref="buildExecutionManager"/>
    <constructor-arg ref="chainExecutionManager"/>
    <constructor-arg ref="buildDetectionActionFactory"/>
    <constructor-arg ref="executionLimitsService"/>     
    <constructor-arg ref="executionStatusProvider"/>
    <constructor-arg ref="planManager"/>
    <constructor-arg ref="stopBuildManager"/>
  </bean>

  <!-- The BuildExecutionManager maintains transient states. So it's not really required to be part of any transactions -->
  <bean id="buildExecutionManager" class="com.atlassian.bamboo.build.DefaultBuildExecutionManager" plugin:available="true">
    <constructor-arg ref="deprecatedExecutionLimitsService"/>
    <constructor-arg ref="scheduler"/>

    <property name="planManager" ref="planManager" />
    <property name="eventManager" ref="eventManager" />
    <property name="errorUpdateHandler" ref="errorUpdateHandler"/>
    <property name="buildResultsSummaryManager" ref="buildResultsSummaryManager"/>
    <property name="buildLoggerManager" ref="buildLoggerManager"/>
    <property name="pendingBuildResultsCleanup" ref="pendingBuildResultsCleanup" />
    <property name="limitedConcurrencyCaller" ref="buildExecutionManagerLimitedConcurrencyCaller" />
    <property name="authorCreatorService" ref="authorCreatorService" />
    <property name="currentlyBuildingContainer" ref="currentlyBuildingContainer"/>
    <property name="planStatePersisterService" ref="planStatePersisterService"/>
  </bean>

  <bean id="buildDetectionActionFactory" class="com.atlassian.bamboo.build.BuildDetectionActionFactoryImpl">
    <constructor-arg ref="buildNumberGeneratorService"/>
    <constructor-arg ref="changeDetectionManager"/>
    <constructor-arg ref="triggerReasonManager"/>
    <constructor-arg ref="errorUpdateHandler"/>
    <constructor-arg ref="buildLoggerManager"/>
    <constructor-arg ref="variableDefinitionManager"/>
  </bean>

  <bean id="planExecutionConcurrencyService" class="com.atlassian.bamboo.plan.PlanExecutionConcurrencyServiceImpl">
    <constructor-arg ref="textProvider"/>
    <constructor-arg ref="executionStatusProvider"/>
  </bean>

  <bean id="executionLimitsService" class="com.atlassian.bamboo.plan.ExecutionLimitsServiceImpl">
    <constructor-arg ref="bambooLicenseManager"/>
    <constructor-arg ref="buildSuspensionCheckBean"/>
    <constructor-arg ref="buildLoggerManager"/>

    <property name="chainedExecutionPermitter" ref="planExecutionConcurrencyService"/>
  </bean>

  <!-- this bean is used in deprecated method isAllowBuilding in DefaultBuildExecutionManager, it das not chain
   the plan execution concurrency service -->
  <bean id="deprecatedExecutionLimitsService" class="com.atlassian.bamboo.plan.ExecutionLimitsServiceImpl">
    <constructor-arg ref="bambooLicenseManager"/>
    <constructor-arg ref="buildSuspensionCheckBean"/>
    <constructor-arg ref="buildLoggerManager"/>
  </bean>

  <bean id="executionStatusProvider" class="com.atlassian.bamboo.plan.ExecutionStatusProviderImpl">
    <constructor-arg ref="currentlyBuildingContainer"/>
    <constructor-arg ref="chainExecutionManager"/>
  </bean>

  <bean id="currentlyBuildingContainer" class="com.atlassian.bamboo.build.CurrentlyBuildingContainer"/>

  <!-- START Atlassian Event -->

  <bean id="eventThreadPoolConfiguration" class="com.atlassian.bamboo.event.BambooEventThreadPoolConfiguration"/>

  <bean id="eventDispatcher" class="com.atlassian.event.internal.AsynchronousAbleEventDispatcher">
    <constructor-arg ref="eventExecutorFactory"/>
  </bean>

  <bean id="eventExecutorFactory" class="com.atlassian.event.internal.UnboundedEventExecutorFactory">
    <constructor-arg ref="eventThreadPoolConfiguration"/>
    <constructor-arg>
        <bean class="com.atlassian.event.internal.EventThreadFactory">
            <constructor-arg>
                <bean class="com.atlassian.bamboo.build.pipeline.concurrent.NamedThreadFactory">
                    <constructor-arg value="BAM::EVENTS"/>
                </bean>
            </constructor-arg>
        </bean>
    </constructor-arg>
  </bean>

  <bean id="listenerHandlerConfiguration" class="com.atlassian.bamboo.event.BambooListenerHandlersConfiguration"/>

  <bean id="eventPublisher" class="com.atlassian.event.internal.LockFreeEventPublisher" plugin:available="true">
    <constructor-arg ref="eventDispatcher"/>
    <constructor-arg ref="listenerHandlerConfiguration"/>
  </bean>

  <bean id="eventManager" class="com.atlassian.bamboo.event.RemotableEventManager" plugin:available="true">
      <constructor-arg ref="eventPublisher"/>
      <constructor-arg>
          <bean class="com.atlassian.bamboo.v2.build.agent.BambooJmsTemplate">
              <constructor-arg ref="connectionFactory"/>
              <property name="defaultDestination" ref="remoteEventsTopic"/>
          </bean>
      </constructor-arg>
  </bean>

  <!-- END Atlassian Event -->

  <bean id="planExecutableAgentsHelper" class="com.atlassian.bamboo.plan.PlanExecutableAgentsHelperImpl" plugin:available="true">
    <constructor-arg ref="planManager"/>
    <constructor-arg ref="executionStatusProvider"/>
    <constructor-arg ref="localAgentManager"/>
    <constructor-arg ref="pluginAccessor"/>
  </bean>

  <!-- Loaded lazily by com.atlassian.bamboo.container.BambooContainer#registerCustomEventListeners -->
  <bean id="defaultListeners" class="org.springframework.beans.factory.config.MapFactoryBean" lazy-init="true">
    <property name="sourceMap">
      <map>
        <entry key="chainExecutionManager" value-ref="chainExecutionManager"/>
        <entry key="awsAccountBean" value-ref="awsAccountBean"/>
        <entry key="com.atlassian.bamboo.plugin.system.listeners:dependencyBuildListener" value-ref="dependencyBuildListener"/>
        <entry key="dependencyChainListener" value-ref="dependencyChainListener"/>
        <entry key="buildDefinitionManager" value-ref="buildDefinitionManager"/>
        <entry key="secureTokenService" value-ref="secureTokenService"/>
      </map>
    </property>
  </bean>

  <alias name="buildExecutionManager" alias="buildExecutionUpdateManager" />

  <bean id="buildQueueManager" class="com.atlassian.bamboo.v2.build.queue.BuildQueueManagerImpl" plugin:available="true">
    <constructor-arg ref="eventManager" />
    <constructor-arg ref="buildExecutionManager" />
    <constructor-arg ref="planManager" />
    <constructor-arg>
      <bean id="jmsTemplate" class="com.atlassian.bamboo.v2.build.agent.BambooJmsTemplate">
        <constructor-arg ref="connectionFactory"/>
        <property name="defaultDestination" ref="buildQueueWithExclusiveAccess"/>
        <!-- Disable the message debugger by default -->
        <!--<property name="messageConverter">-->
          <!--<bean class="com.atlassian.bamboo.v2.build.agent.DebugMessageConverter"/>-->
        <!--</property>-->
      </bean>
    </constructor-arg>
    <constructor-arg ref="pluginAccessor" />
    <constructor-arg ref="errorUpdateHandler" />
    <constructor-arg ref="bootstrapManager" />
    <constructor-arg ref="buildResultsSummaryManager" />
    <constructor-arg ref="planExecutableAgentsHelper"/>
  </bean>

  <bean id="stopBuildManager" class="com.atlassian.bamboo.build.DefaultStopBuildManager" >
    <property name="planExecutionManager" ref="planExecutionManager" />
    <property name="buildQueueManager"  ref="buildQueueManager" />
    <property name="localAgentManager" ref="localAgentManager" />
    <property name="agentCommandSender" ref="agentCommandSender" />
    <property name="eventManager" ref="eventManager" />
    <property name="scheduler" ref="scheduler" />
  </bean>

  <bean id="changeDetectionManager" class="com.atlassian.bamboo.v2.trigger.DefaultChangeDetectionManager" >
    <constructor-arg ref="buildLoggerManager"/>
    <constructor-arg ref="textProvider"/>
    <constructor-arg ref="variableDefinitionManager"/>
    <constructor-arg ref="customVariableContext"/>
  </bean>

  <bean id="buildDefinitionManager" class="com.atlassian.bamboo.build.CachedBuildDefinitionManagerImpl">
    <constructor-arg>
      <bean parent="txWriteProxy">
        <property name="target">
          <bean class="com.atlassian.bamboo.build.DefaultBuildDefinitionManager">
            <constructor-arg ref="buildDefinitionConverter"/>
            <constructor-arg ref="planScheduler"/>
            <constructor-arg ref="planManager"/>
            <constructor-arg ref="pluginAccessor"/>
          </bean>
        </property>
      </bean>
    </constructor-arg>
  </bean>


  <bean id="buildDirectoryManager" class="com.atlassian.bamboo.build.fileserver.DefaultBuildDirectoryManager" plugin:available="true">
    <property name="agentContext" ref="agentContext"/>
    <property name="administrationConfigurationManager" ref="administrationConfigurationManager"/>
  </bean>

  <bean id="jdkManager" class="com.atlassian.bamboo.builder.DefaultJdkManager" >
    <property name="capabilitySetManager" ref="capabilitySetManager" />
    <property name="elasticFunctionalityFacade" ref="elasticFunctionalityFacade"/>
  </bean>

  <!--@deprecated since 2.7-->
  <bean id="buildPlanConstructorFactory" class="com.atlassian.bamboo.build.creation.BuildPlanConstructorFactory" >
    <constructor-arg ref="buildCreationService"/>
    <constructor-arg ref="buildDefinitionConverter"/>
    <constructor-arg ref="projectManager"/>
    <constructor-arg ref="aclUpdateHelper"/>
    <constructor-arg ref="authenticationContext"/>
  </bean>

  <bean id="buildAgentController" class="com.atlassian.bamboo.v2.build.agent.BuildAgentControllerImpl">
    <constructor-arg ref="buildResultProcessor" />
    <constructor-arg ref="agentQueueAccessor" />
    <constructor-arg ref="capabilitySetManager" />
    <constructor-arg ref="buildExecutionManager"/>
    <constructor-arg ref="errorUpdateHandler"/>
    <constructor-arg ref="capabilityContext" />
    <constructor-arg ref="agentContext" />
    <constructor-arg ref="customVariableContext" />
  </bean>

  <bean id="planStatePersisterService" class="com.atlassian.bamboo.plan.PlanStatePersisterServiceImpl">
     <constructor-arg ref="planStatePersister"/>
     <constructor-arg ref="resultsSummaryManager"/>      
  </bean>

  <bean id="planStatePersister" parent="txReadWriteProxy">
    <property name="target">
      <bean class="com.atlassian.bamboo.plan.PlanStatePersisterImpl">
        <constructor-arg ref="planManager"/>
        <constructor-arg ref="buildResultsIndexer"/>
        <constructor-arg ref="buildResultsSummaryManager"/>
        <constructor-arg ref="errorUpdateHandler"/>
        <constructor-arg ref="buildLoggerManager"/>
        <constructor-arg ref="buildExecutionManager"/>
        <constructor-arg ref="buildDefinitionManager"/>
        <constructor-arg ref="testsManager"/>
      </bean>
    </property>
    <property name="preInterceptors">
      <list>
        <bean class="com.atlassian.bamboo.author.AuthorCreatorServiceInterceptor">
          <constructor-arg ref="authorCreatorService"/>
        </bean>
      </list>
    </property>
  </bean>

  <bean id="buildResultProcessor" class="com.atlassian.bamboo.v2.build.agent.LocalBuildResultProcessor">
    <constructor-arg ref="buildExecutionManager"/>
    <constructor-arg ref="planManager"/>
    <constructor-arg ref="buildResultsSummaryManager"/>
    <constructor-arg ref="eventManager"/>
    <constructor-arg ref="buildLoggerManager"/>
    <constructor-arg ref="pluginAccessor" />
    <constructor-arg ref="planStatePersisterService"/>
  </bean>

  <bean id="capabilityRequirementsMatcher" class="com.atlassian.bamboo.v2.build.agent.capability.CapabilityRequirementsMatcherImpl" />

  <bean id="localAgentManager" parent="txWriteProxy" plugin:available="true">
    <property name="target" ref="localAgentManagerTarget" />
  </bean>

  <bean id="localAgentManagerTarget" class="com.atlassian.bamboo.buildqueue.manager.LocalAgentManagerImpl" depends-on="broker" destroy-method="stopLocalAgents">
    <property name="agentDao" ref="agentDao"/>
    <property name="buildAgentController" ref="buildAgentController"/>
    <property name="capabilityRequirementsMatcher" ref="capabilityRequirementsMatcher"/>
    <property name="capabilitySetManager" ref="capabilitySetManager"/>
    <property name="eventManager" ref="eventManager"/>
    <property name="bambooLicenseManager" ref="bambooLicenseManager"/>
    <property name="elasticImageConfigurationAccessor" ref="elasticImageConfigurationAccessor"/>
    <property name="elasticAgentManager" ref="elasticAgentManager" />
    <property name="buildExecutionManager" ref="buildExecutionManager" />
    <property name="errorUpdateHander" ref="errorUpdateHandler" />
    <property name="buildLoggerManager" ref="buildLoggerManager" />
  </bean>

  <bean id="elasticFunctionalityFacade" class="com.atlassian.bamboo.agent.elastic.server.ElasticFunctionalityFacadeImpl" autowire="byName" />

  <bean id="bambooSmackClient" class="com.atlassian.bamboo.xmpp.BambooSmackClient">
    <property name="instantMessagingServerManager" ref="instantMessagingServerManager" />
  </bean>

  <bean id="bambooSmackMessageListenerTarget" class="com.atlassian.bamboo.xmpp.BambooSmackMessageListener" >
    <property name="bambooUserManager" ref="bambooUserManager" />
    <property name="smackClient" ref="bambooSmackClient" />
  </bean>

  <bean id="bambooSmackMessageListener" class="org.springframework.aop.framework.ProxyFactoryBean">
    <property name="target" ref="bambooSmackMessageListenerTarget"/>
    <property name="proxyInterfaces" value="org.jivesoftware.smack.PacketListener"/>
    <property name="interceptorNames">
      <list>
        <value>hibernateInterceptor</value>
      </list>
    </property>
  </bean>

  <!-- A series on Hibernate advices @TODO These shouldn't ALL be needed-->
  <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

  <bean id="customBuildCompleteActionHibernateAdvisor" class="org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor">
    <property name="advice" ref="hibernateInterceptor" />
    <property name="expression" value="execution(* com.atlassian.bamboo.build.CustomBuildCompleteAction.run(..))" />
  </bean>

  <bean id="customBuildCompleteActionAdvisor" class="org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor">
    <property name="advice" ref="hibernateInterceptor" />
    <property name="expression" value="execution(* com.atlassian.bamboo.build.CustomBuildCompleteAction.run(..))" />
  </bean>

  <bean id="buildTaskAdvisor" class="org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor">
    <property name="advice" ref="hibernateInterceptor"/>
    <property name="expression" value="execution(* com.atlassian.bamboo.v2.build.task.BuildTask.call(..))"/>
  </bean>

  <bean id="upgradeTaskAdvisor" class="org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor">
    <property name="advice" ref="hibernateInterceptor"/>
    <property name="expression" value="execution(* com.atlassian.bamboo.upgrade.HibernateUpgradeTask.doUpgrade())"/>
  </bean>

  <bean id="hibernateEventListenerAdvisor" class="org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor">
    <property name="advice" ref="hibernateInterceptor"/>
    <property name="expression" value="execution(* com.atlassian.bamboo.event.HibernateEventListener.handleEvent(..))"/>
  </bean>


  <bean id="instantMessagingServerManager" parent="txReadWriteProxy">
    <property name="target">
      <bean class="com.atlassian.bamboo.instantmessagingserver.InstantMessagingServerManagerImpl">
        <property name="instantMessagingServerDao">
          <bean class="com.atlassian.bamboo.instantmessagingserver.InstantMessagingServerHibernateDao">
            <property name="sessionFactory" ref="sessionFactory"/>
          </bean>
        </property>
      </bean>
    </property>
  </bean>

  <bean id="jiraServerManager" parent="txReadWriteProxy"  plugin:available="true">
    <property name="target">
      <bean class="com.atlassian.bamboo.jira.jiraserver.JiraServerManagerImpl">
        <property name="jiraServerDao">
          <bean class="com.atlassian.bamboo.jira.jiraserver.JiraServerHibernateDao">
            <property name="sessionFactory" ref="sessionFactory" />
          </bean>
        </property>
      </bean>
    </property>
  </bean>


  <bean id="bambooPermissionManager" parent="txUserReadWriteProxy" plugin:available="true">
    <property name="target">
      <bean class="com.atlassian.bamboo.security.BambooPermissionManagerImpl">
        <property name="persister" ref="persister"/>
        <property name="aclService" ref="aclService"/>
        <property name="planManager" ref="planManager"/>
        <property name="bambooUserManager" ref="bambooUserManager"/>
        <property name="sidRetrievalStrategy" ref="sidRetrievalStrategy"/>
        <property name="overrideAuthorities"> <!-- Below authorities will always have permission to everything -->
          <list>
            <bean class="org.acegisecurity.GrantedAuthorityImpl"> <!-- System can do ANYTHING -->
              <constructor-arg value="ROLE_SYSTEM"/>
            </bean>
            <bean class="org.acegisecurity.GrantedAuthorityImpl"> <!-- Global admin can do ANYTHING. -->
              <constructor-arg value="ROLE_ADMIN"/>
            </bean>
          </list>
        </property>
        <property name="objectIdentityRetrievalStrategy" ref="objectIdentityRetrievalStrategy" />
      </bean>
    </property>
  </bean>

  <bean id="repositoryManager" parent="txReadProxy" plugin:available="true">
    <property name="target">
      <bean class="com.atlassian.bamboo.repository.DefaultRepositoryManager">
        <property name="textProvider" ref="textProvider" />
        <property name="pluginAccessor" ref="pluginAccessor"/>
      </bean>
    </property>
  </bean>

  <bean id="webRepositoryViewerManager" parent="txReadProxy" plugin:available="true">
    <property name="target">
      <bean class="com.atlassian.bamboo.webrepository.WebRepositoryViewerManagerImpl">
        <property name="pluginAccessor" ref="pluginAccessor"/>
      </bean>
    </property>
  </bean>

  <bean id="buildStrategyManager" parent="txReadProxy" plugin:available="true">
    <property name="target">
      <bean class="com.atlassian.bamboo.build.strategy.DefaultBuildStrategyManager">
        <constructor-arg ref="pluginAccessor"/>
      </bean>
    </property>
  </bean>

  <bean id="dependencyBuildListener" class="org.springframework.aop.framework.ProxyFactoryBean">
    <property name="target">
      <ref bean="dependencyBuildListenerTarget"/>
    </property>
    <property name="proxyInterfaces">
      <value>com.atlassian.event.EventListener</value>
    </property>
    <property name="interceptorNames">
      <list>
        <value>hibernateInterceptor</value>
      </list>
    </property>
  </bean>

  <bean id="dependencyBuildListenerTarget" class="com.atlassian.bamboo.v2.trigger.DependencyBuildListener" >
    <constructor-arg ref="planManager"/>
    <constructor-arg ref="planExecutionManager"/>
    <constructor-arg ref="planDependencyManager"/>
    <constructor-arg ref="dependencyBlockingManager"/>
    <constructor-arg ref="buildDetectionActionFactory"/>
  </bean>

  <bean id="dependencyChainListener" class="org.springframework.aop.framework.ProxyFactoryBean">
    <property name="target">
      <ref bean="dependencyChainListenerTarget"/>
    </property>
    <property name="proxyInterfaces">
      <value>com.atlassian.event.EventListener</value>
    </property>
    <property name="interceptorNames">
      <list>
        <value>hibernateInterceptor</value>
      </list>
    </property>
  </bean>

  <bean id="dependencyChainListenerTarget" class="com.atlassian.bamboo.v2.trigger.DependencyChainListener" >
    <constructor-arg ref="planExecutionManager"/>
    <constructor-arg ref="planDependencyManager" />
    <constructor-arg ref="planManager"/>
    <constructor-arg ref="buildDetectionActionFactory" />
    <constructor-arg ref="dependencyBlockingManager" />
  </bean>

  <bean id="luceneConnection" class="com.atlassian.bamboo.index.LuceneConnectionImpl">
    <constructor-arg ref="bootstrapManager" />
  </bean>


  <bean id="buildResultsIndexer" class="com.atlassian.bamboo.index.DefaultBuildResultsIndexer">
    <property name="luceneConnection" ref="luceneConnection"/>
    <property name="planManager" ref="planManager"/>
    <property name="buildResultsSummaryDocumentFactory" ref="buildResultsSummaryDocumentFactory"/>
    <property name="resultsSummaryManager" ref="resultsSummaryManager"/>
    <property name="hibernateConfig" ref="hibernateConfig"/>
  </bean>


  <bean id="buildResultsSummaryDocumentFactory" class="com.atlassian.bamboo.index.BuildResultsSummaryDocumentFactory">
    <property name="pluginAccessor" ref="pluginAccessor" />
    <property name="triggerReasonManager" ref="triggerReasonManager" />
    <property name="buildResultsSummaryManager" ref="buildResultsSummaryManager" />
  </bean>

  <bean id="indexedBuildResultsSearcher" class="com.atlassian.bamboo.resultsummary.search.IndexedBuildResultsSearcherImpl" plugin:available="true">
    <property name="planManager" ref="planManager" />
    <property name="buildResultsSummaryDocumentFactory" ref="buildResultsSummaryDocumentFactory" />
    <property name="luceneConnection" ref="luceneConnection" />
  </bean>

  <bean id="buildResultsSearcher" class="com.atlassian.bamboo.build.LuceneBasedJiraIssueResultsManagerImpl" plugin:available="true">
    <property name="indexedBuildResultsSearcher" ref="indexedBuildResultsSearcher"/>
    <property name="buildResultsSummaryManager" ref="buildResultsSummaryManager"/>
  </bean>

  <alias name="buildResultsSummaryManager" alias="resultsSummaryManager"/>

  <bean id="buildResultsSummaryManager" class="org.springframework.aop.framework.ProxyFactoryBean" plugin:available="true">
    <property name="proxyInterfaces" value="com.atlassian.bamboo.resultsummary.BuildResultsSummaryManager"/>
    <property name="interceptorNames">
      <list>
        <idref local="transactionReadWriteInterceptor"/>
        <idref bean="permissionsInterceptor"/>
        <idref local="buildResultsSummaryManagerTarget"/>
      </list>
    </property>
  </bean>

  <bean id="buildResultsSummaryManagerTarget" class="com.atlassian.bamboo.resultsummary.BuildResultsSummaryManagerImpl">
    <property name="buildResultsSummaryDao" ref="buildResultsSummaryDao"/>
    <property name="extendedAuthorManager" ref="extendedAuthorManager"/>
    <property name="buildResultsIndexer" ref="buildResultsIndexer" />
    <property name="eventManager" ref="eventManager" />
    <property name="jiraIssueUtils" ref="jiraIssueUtils"  />
    <property name="jiraIssueManager" ref="jiraIssueManager"/>
    <property name="artifactLinkManager" ref="artifactLinkManager"/>
    <property name="commitDao" ref="commitDao"/>
    <property name="buildExecutionManager" ref="buildExecutionManager"/>
  </bean>

  <bean id="testsManager"  parent="txReadWriteProxy" plugin:available="true">
    <property name="target">
        <bean class="com.atlassian.bamboo.resultsummary.tests.TestsManagerImpl">
          <constructor-arg ref="testsDao"/>
          <constructor-arg ref="testResultsDao"/>
          <constructor-arg ref="planManager"/>
          <constructor-arg ref="buildResultsSummaryManager"/>
        </bean>
    </property>
  </bean>

  <bean id="loginInformationManager" parent="txReadWriteProxy">
    <property name="target">
      <bean class="com.atlassian.bamboo.user.LoginInformationManagerImpl">
        <constructor-arg ref="loginInformationDao"/>
        <constructor-arg ref="administrationConfigurationManager"/>
      </bean>
    </property>
  </bean>

  <bean id="freemarkerContext" class="com.atlassian.bamboo.ww2.FreemarkerContext">
    <constructor-arg ref="bambooLicenseManager" />
    <constructor-arg ref="administrationConfigurationManager"/>
    <constructor-arg ref="bambooPermissionManager" />
    <constructor-arg ref="dashboardCachingManager"/>
    <constructor-arg ref="webInterfaceManager" />
    <constructor-arg ref="bambooUserManager" />
    <constructor-arg ref="pluginAccessor" />
    <constructor-arg ref="planFavouriteService" />
  </bean>

  <bean id="jiraIssueUtils" class="com.atlassian.bamboo.jira.jiraissues.JiraIssueUtils" >
    <property name="jiraServerManager" ref="jiraServerManager" />
    <property name="resultsSummaryManager" ref="resultsSummaryManager" />
    <property name="eventManager" ref="eventManager" />
  </bean>

    <bean id="jiraRemoteIssueManager" class="com.atlassian.bamboo.jira.jiraissues.JiraRemoteIssueManagerCache">
        <constructor-arg>
            <bean class="com.atlassian.bamboo.jira.jiraissues.JiraRemoteIssueManagerImpl">
              <constructor-arg ref="jiraServerManager" />
              <constructor-arg ref="jiraMetaDataManager" />
              <constructor-arg ref="pluginAccessor" />
            </bean>
        </constructor-arg>
        <constructor-arg value="${bamboo.jira.issueCache.timeToLive}"/>
    </bean>

    <bean id="executorService" class="java.util.concurrent.Executors" factory-method="newCachedThreadPool"/>

    <bean id="jiraMetaDataManager" class="com.atlassian.bamboo.jira.jirametadata.JiraMetaDataManagerCache" lazy-init="true">
      <constructor-arg>
        <bean class="com.atlassian.bamboo.jira.jirametadata.JiraMetaDataManagerImpl">
          <property name="jiraServerManager" ref="jiraServerManager"/>
          <property name="pluginAccessor" ref="pluginAccessor" />
        </bean>
      </constructor-arg>
      <constructor-arg value="${bamboo.jira.metaDataCache.timeToLive}"/>
      <constructor-arg ref="executorService"/>
    </bean>

   <bean id="jiraIssueManager" class="com.atlassian.bamboo.jira.jiraissues.JiraIssueManagerImpl">
      <constructor-arg ref="jiraRemoteIssueManager" />
      <constructor-arg ref="executorService"/>
   </bean>

  <bean id="triggerReasonManager" class="com.atlassian.bamboo.v2.build.trigger.TriggerReasonManagerImpl" >
      <constructor-arg ref="pluginAccessor"/>
  </bean>

  <bean id="notificationManager"  parent="txReadWriteProxy" plugin:available="true">
    <property name="target">
      <bean class="com.atlassian.bamboo.notification.NotificationManagerImpl">
        <property name="notificationDao" ref="notificationDao"/>
        <property name="pluginAccessor" ref="pluginAccessor"/>
        <property name="bambooUserManager" ref="bambooUserManager" />
        <property name="labelManager" ref="labelManager" />
      </bean>
    </property>
  </bean>

  <bean id="systemNotificationService" class="com.atlassian.bamboo.notification.SystemNotificationServiceImpl" plugin:available="true">
    <constructor-arg ref="notificationManager"/>
  </bean>

  <bean id="notificationDispatcher" class="com.atlassian.bamboo.notification.NotificationDispatcherImpl" plugin:available="true"/>

  <bean id="notificationFactory" class="com.atlassian.bamboo.notification.NotificationFactory" >
    <property name="bambooSmackClient" ref="bambooSmackClient" />
    <property name="eventManager" ref="eventManager" />
    <property name="bambooUserManager" ref="bambooUserManager" />
    <property name="templateRenderer" ref="templateRenderer" />
    <property name="planManager" ref="planManager" />
  </bean>

  <!--TODO: Remove using two versions of authorManager, one for indexing, one for hibernate-->
  <bean id="extendedAuthorManager" class="org.springframework.aop.framework.ProxyFactoryBean">
    <property name="proxyInterfaces" value="com.atlassian.bamboo.author.ExtendedAuthorManager"/>
    <property name="interceptorNames">
      <list>
        <idref local="transactionReadWriteInterceptor"/>
        <idref bean="permissionsInterceptor"/>
        <idref local="extendedAuthorManagerTarget"/>
      </list>
    </property>
  </bean>

  <bean id="extendedAuthorManagerTarget" class="com.atlassian.bamboo.author.HibernateAuthorManagerImpl">
    <property name="authorDao" ref="authorDao"/>
    <property name="bambooUserManager" ref="bambooUserManager" />
  </bean>

  <bean id="authorManager" class="com.atlassian.bamboo.author.LuceneAuthorManagerImpl">
    <property name="buildResultsSummaryDocumentFactory" ref="buildResultsSummaryDocumentFactory" />
    <property name="indexedBuildResultsSearcher" ref="indexedBuildResultsSearcher" />
  </bean>

  <bean id="dashboardCachingManager" class="org.springframework.aop.framework.ProxyFactoryBean">
    <property name="proxyInterfaces">
      <value>com.atlassian.bamboo.caching.DashboardCachingManager</value>
    </property>
    <property name="interceptorNames">
      <list>
        <idref local="transactionReadOnlyInterceptor"/>
        <idref bean="permissionsInterceptor"/>
        <idref local="dashboardCachingManagerTarget"/>
      </list>
    </property>
  </bean>

  <bean id="dashboardCachingManagerTarget" class="com.atlassian.bamboo.caching.DashboardCachingManagerImpl" plugin:available="true">
    <constructor-arg ref="planManager"/>
  </bean>

    <bean id="projectManager" parent="txUserReadWriteProxy" plugin:available="true">
        <property name="target">
            <bean class="com.atlassian.bamboo.project.DefaultProjectManager">
                <constructor-arg ref="projectDao"/>
            </bean>
        </property>
    </bean>

  <bean id="planManagerTarget" class="com.atlassian.bamboo.plan.PlanManagerImpl">
      <constructor-arg ref="planDao"/>
      <constructor-arg ref="bambooLicenseManager"/>
      <constructor-arg ref="eventManager"/>
      <constructor-arg ref="projectManager"/>
  </bean>

  <bean name="planManager" class="org.springframework.aop.framework.ProxyFactoryBean" plugin:available="true">
    <property name="proxyInterfaces" value="com.atlassian.bamboo.plan.PlanManager"/>
    <property name="interceptorNames">
      <list>
        <idref local="transactionReadWriteInterceptor"/>
        <idref bean="permissionsInterceptor"/>
        <idref local="planManagerTarget"/>
      </list>
    </property>
  </bean>

  <bean name="deletionService" class="org.springframework.aop.framework.ProxyFactoryBean" plugin:available="true">
    <property name="proxyInterfaces" value="com.atlassian.bamboo.deletion.DeletionService"/>
    <property name="interceptorNames">
        <list>
            <!--<idref local="transactionReadWriteInterceptor"/>-->
            <idref bean="permissionsInterceptor"/>
            <idref local="deletionServiceTarget"/>
        </list>
    </property>
  </bean>

  <bean id="deletionServiceTarget" class="com.atlassian.bamboo.deletion.DeletionServiceImpl">
    <constructor-arg ref="errorHandler"/>
    <constructor-arg ref="buildResultsIndexer"/>
    <constructor-arg ref="planScheduler"/>
    <constructor-arg ref="planDependencyManager"/>
    <constructor-arg ref="planParticleManager"/>
    <constructor-arg ref="eventManager"/>
    <constructor-arg ref="resultsSummaryManager"/>
    <constructor-arg ref="buildSuspensionCheckBean"/>
    <constructor-arg ref="adminErrorHandler"/>
    <constructor-arg ref="aclService"/>
    <constructor-arg ref="testsManager"/>
    <constructor-arg ref="projectManager"/>
    <constructor-arg ref="planManager"/>
    <constructor-arg ref="chainStageDao"/>
    <constructor-arg ref="bandanaPersister"/>
    <constructor-arg ref="pluginAccessor"/>
    <constructor-arg ref="artifactDefinitionManager"/>
    <constructor-arg ref="artifactSubscriptionManager"/>
    <constructor-arg ref="auditLogService"/>
    <constructor-arg ref="variableDefinitionManager"/>
  </bean>
     
  <bean name="buildSuspensionCheckBean" class="com.atlassian.bamboo.build.BuildSuspensionCheckBean">
    <constructor-arg ref="textProvider" />
    <constructor-arg ref="administrationConfigurationManager" />
    <constructor-arg ref="adminErrorHandler" />
    <constructor-arg ref="planManager" />
    <constructor-arg ref="bambooLicenseManager"/>
  </bean>

  <bean id="buildNumberGeneratorService" class="com.atlassian.bamboo.build.BuildNumberGeneratorServiceImpl">
    <constructor-arg>
      <bean parent="txReadWriteProxy">
        <property name="target">
          <bean class="com.atlassian.bamboo.build.BuildNumberGeneratorDaoImpl">
            <property name="hibernateTemplate" ref="hibernateTemplateWithANewSession"/>
          </bean>
        </property>
      </bean>
    </constructor-arg>
  </bean>

  <bean id="authorCreatorService" class="com.atlassian.bamboo.author.AuthorCreatorServiceImpl">
     <constructor-arg ref="extendedAuthorManager"/>
  </bean>

  <bean id="planDependencyManager" parent="txReadWriteProxy">
    <property name="target">
      <bean class="com.atlassian.bamboo.build.PlanDependencyManagerImpl">
        <constructor-arg ref="planDependencyDao"/>
        <constructor-arg ref="planManager" />
      </bean>
    </property>
  </bean>

  <bean id="planValidationService" class="com.atlassian.bamboo.build.creation.PlanValidationServiceImpl">
    <constructor-arg ref="projectManager"/>
    <constructor-arg ref="planManager"/>
    <constructor-arg ref="textProvider"/>
    <constructor-arg ref="repositoryConfigHelper"/>
    <constructor-arg ref="webRepositoryConfigHelper"/>
    <constructor-arg ref="buildStrategyConfigHelper"/>
    <constructor-arg ref="builderConfigHelper"/>
  </bean>

  <bean id="repositoryConfigHelper" class="com.atlassian.bamboo.build.creation.RepositoryConfigHelper">
    <constructor-arg ref="repositoryManager"/>
    <constructor-arg ref="textProvider"/>
    <constructor-arg ref="variableDefinitionManager"/>
    <constructor-arg ref="customVariableContext"/>
  </bean>

  <bean id="webRepositoryConfigHelper" class="com.atlassian.bamboo.build.creation.WebRepositoryConfigHelper">
    <constructor-arg ref="webRepositoryViewerManager"/>
    <constructor-arg ref="textProvider"/>
  </bean>

  <bean id="builderConfigHelper" class="com.atlassian.bamboo.build.creation.BuilderConfigHelper">
    <constructor-arg ref="builderManager"/>
    <constructor-arg ref="textProvider"/>
  </bean>

  <bean id="buildStrategyConfigHelper" class="com.atlassian.bamboo.build.creation.BuildStrategyConfigHelper">
    <constructor-arg ref="buildStrategyManager"/>
  </bean>

  <bean id="planCreationTemplate" class="com.atlassian.bamboo.build.creation.PlanCreationTemplate" abstract="true">
    <constructor-arg ref="planManager"/>
    <constructor-arg ref="projectManager"/>
    <constructor-arg ref="aclUpdateHelper"/>
    <constructor-arg ref="authenticationContext"/>
    <constructor-arg ref="bambooLicenseManager"/>
    <constructor-arg ref="aclService"/>
    <constructor-arg ref="planScheduler"/>
    <constructor-arg ref="repositoryConfigHelper"/>
    <constructor-arg ref="buildStrategyConfigHelper"/>
    <constructor-arg ref="builderConfigHelper"/>
    <constructor-arg ref="webRepositoryConfigHelper"/>
    <constructor-arg ref="eventManager"/>
    <constructor-arg ref="planValidationService"/>
    <constructor-arg ref="auditLogService"/>
    <constructor-arg ref="buildDefinitionConverter"/>
    <constructor-arg ref="artifactDefinitionManager"/>
    <constructor-arg ref="artifactSubscriptionManager"/>
  </bean>

  <bean id="buildCreationService" class="com.atlassian.bamboo.build.creation.BuildCreationService" parent="planCreationTemplate">
    <constructor-arg ref="notificationManager"/>
  </bean>

  <bean id="chainCreationService" class="com.atlassian.bamboo.build.creation.ChainCreationService" parent="planCreationTemplate">
    <constructor-arg ref="notificationManager"/>
    <constructor-arg ref="jobCreationService"/>
  </bean>

  <bean id="jobCreationService" class="com.atlassian.bamboo.build.creation.JobCreationService" parent="planCreationTemplate">
  </bean>

  <bean id="uiConfigBean" class="com.atlassian.bamboo.ww2.actions.build.admin.create.UIConfigBean">
    <constructor-arg ref="webRepositoryViewerManager"/>
    <constructor-arg ref="buildStrategyManager"/>
    <constructor-arg ref="repositoryManager" />
    <constructor-arg ref="builderManager" />
    <constructor-arg ref="projectManager"/>
    <constructor-arg ref="bambooLicenseManager" />
    <constructor-arg ref="planManager"/>
    <constructor-arg ref="jdkManager"/>
  </bean>

  <bean id="taskUIConfigBean" class="com.atlassian.bamboo.ww2.actions.build.admin.config.task.TaskUIConfigBean">
    <constructor-arg ref="taskManager"/>
    <constructor-arg ref="templateRenderer"/>
  </bean>

  <bean id="capabilitySetManager" class="org.springframework.aop.framework.ProxyFactoryBean">
    <property name="proxyInterfaces" value="com.atlassian.bamboo.v2.build.agent.capability.CapabilitySetManager"/>
    <property name="interceptorNames">
      <list>
        <idref local="transactionWriteInterceptor"/>
        <idref bean="permissionsInterceptor"/>
        <idref local="capabilityManagerTarget"/>
      </list>
    </property>
  </bean>

  <bean id="capabilitySetManagerNoTx" class="org.springframework.aop.framework.ProxyFactoryBean">
    <property name="proxyInterfaces" value="com.atlassian.bamboo.v2.build.agent.capability.CapabilitySetManager"/>
    <property name="interceptorNames">
      <list>
        <idref bean="permissionsInterceptor"/>
        <idref local="capabilityManagerTargetNoTx"/>
      </list>
    </property>
  </bean>

  <bean id="capabilityManagerTarget" parent="txWriteProxy">
    <property name="target" ref="capabilityManagerTargetNoTx"/>
  </bean>

  <bean id="capabilityManagerTargetNoTx" class="com.atlassian.bamboo.v2.build.agent.capability.CapabilitySetManagerImpl">
    <property name="localCapabilityDao" ref="localCapabilityDao"/>
    <property name="remoteCapabilityDao" ref="remoteCapabilityDao"/>
    <property name="imageCapabilityDao" ref="imageCapabilityDao"/>
    <property name="planManager" ref="planManager"/>
    <property name="capabilityRequirementsMatcher" ref="capabilityRequirementsMatcher"/>
    <property name="eventManager" ref="eventManager"/>
    <property name="agentDao" ref="agentDao"/>
  </bean>

  <bean id="transactionReadWriteInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
  <property name="transactionManager" ref="transactionManager"/>
  <property name="transactionAttributes">
    <props>
      <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
      <prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
      <prop key="is*">PROPAGATION_REQUIRED,readOnly</prop>
      <prop key="has*">PROPAGATION_REQUIRED,readOnly</prop>
      <prop key="filter*">PROPAGATION_REQUIRED,readOnly</prop>
      <prop key="generateBuildNumberNewTx">PROPAGATION_REQUIRES_NEW,ISOLATION_READ_COMMITTED</prop>
      <prop key="*">PROPAGATION_REQUIRED</prop>
    </props>
  </property>
  </bean>

  <bean id="transactionWriteInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
  <property name="transactionManager" ref="transactionManager"/>
  <property name="transactionAttributes">
    <props>
      <prop key="*">PROPAGATION_REQUIRED</prop>
    </props>
  </property>
  </bean>

  <bean id="transactionReadOnlyInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
  <property name="transactionManager" ref="transactionManager"/>
  <property name="transactionAttributes">
    <props>
      <prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
    </props>
  </property>
  </bean>

  <bean id="labelManager" class="org.springframework.aop.framework.ProxyFactoryBean" plugin:available="true">
    <property name="proxyInterfaces">
      <value>com.atlassian.bamboo.labels.LabelManager</value>
    </property>
    <property name="interceptorNames">
      <list>
        <idref bean="permissionsInterceptor"/>
        <idref local="labelManagerTarget"/>
      </list>
    </property>
  </bean>

  <bean id="labelManagerTarget" parent="txReadWriteProxy">
    <property name="target">
      <bean class="com.atlassian.bamboo.labels.LabelManagerImpl">
          <constructor-arg ref="labelDao"/>
          <constructor-arg ref="buildResultsIndexer"/>
          <constructor-arg ref="planManager"/>
          <constructor-arg ref="resultsSummaryManager"/>
          <constructor-arg ref="eventPublisher"/>
      </bean>
    </property>
  </bean>

  <bean id="builderManager" class="com.atlassian.bamboo.builder.DefaultBuilderManager">
    <constructor-arg ref="pluginAccessor"/>
    <constructor-arg ref="capabilitySetManager"/>
    <constructor-arg ref="elasticAccountBean"/>
  </bean>

  <bean id="elasticImageConfigurationManager" class="com.atlassian.bamboo.agent.elastic.server.ElasticImageConfigurationManagerImpl">
    <constructor-arg ref="elasticImageConfigurationDao" />
    <constructor-arg ref="resourceResolver" />
    <constructor-arg ref="elasticAgentManager" />
    <constructor-arg ref="elasticImageConfigurationAccessor"/>
    <constructor-arg ref="localAgentManager" />
    <constructor-arg ref="elasticInstanceScheduleManager" />
  </bean>

  <bean id="elasticImageConfigurationAccessor" class="com.atlassian.bamboo.agent.elastic.server.ElasticImageConfigurationAccessorImpl">
    <constructor-arg ref="elasticImageConfigurationDao" />
  </bean>

  <bean id="elasticUIBean" class="com.atlassian.bamboo.ww2.actions.admin.elastic.ElasticUIBean">
    <constructor-arg ref="localAgentManager"/>
    <constructor-arg ref="administrationConfigurationManager"/>
    <constructor-arg ref="elasticAgentManager"/>
  </bean>

  <bean id="commentManager" parent="txReadWriteProxy" plugin:available="true">
    <property name="target">
      <bean class="com.atlassian.bamboo.comment.CommentManagerImpl">
        <property name="commentDao" ref="commentDao"/>
      </bean>
    </property>
  </bean>




  <bean id="capabilityManager" parent="txReadWriteProxy">
    <property name="target">
      <bean class="com.atlassian.bamboo.capability.CapabilityManagerImpl">
        <property name="capabilityDao" ref="capabilityDao"/>
        <property name="capabilitySetManager" ref="capabilitySetManager"/>
        <property name="localAgentManager" ref="localAgentManager"/>
        <property name="buildDefinitionManager" ref="buildDefinitionManager"/>
      </bean>
    </property>
  </bean>

  <bean id="auditLogService" class="com.atlassian.bamboo.persister.DefaultAuditLogService" plugin:available="true">
    <constructor-arg ref="auditLogDao" />
    <constructor-arg ref="authenticationContext" />
    <constructor-arg ref="administrationConfigurationManager"/>
  </bean>

  <bean id="buildDefinitionConverter" class="com.atlassian.bamboo.fieldvalue.BuildDefinitionConverter" plugin:available="true">
    <property name="builderManager" ref="builderManager" />
    <property name="buildStrategyManager" ref="buildStrategyManager" />
    <property name="repositoryManager" ref="repositoryManager" />
    <property name="pluginManager" ref="pluginManager" />
    <property name="webRepositoryViewerManager" ref="webRepositoryViewerManager" />
  </bean>


  <bean id="dependencyBlockingManager" class="com.atlassian.bamboo.v2.build.trigger.DefaultDependencyBlockingManager">
    <constructor-arg ref="dependencyTreeBuilder"/>
    <constructor-arg ref="planManager"/>
    <constructor-arg ref="changeDetectionManager"/>
    <constructor-arg ref="planExecutionManager"/>
    <constructor-arg ref="triggerReasonManager"/>
    <constructor-arg ref="errorUpdateHandler"/>
    <constructor-arg ref="buildNumberGeneratorService"/>    
  </bean>

  <bean id="dependencyTreeBuilder" class="com.atlassian.bamboo.v2.build.dependencies.DependencyTreeBuilderImpl">
        <constructor-arg ref="planManager"/>
        <constructor-arg ref="planDependencyManager"/>
  </bean>

  <bean id="i18nBeanFactory" class="com.atlassian.bamboo.utils.i18n.I18nBeanFactoryImpl" plugin:available="true">
    <constructor-arg ref="cacheManager"/>
    <constructor-arg ref="pluginAccessor"/>
    <constructor-arg ref="pluginEventManager"/>
  </bean>

  <bean id="elasticInstanceScheduleManager" parent="txReadWriteProxy">
    <property name="target">
      <bean class="com.atlassian.bamboo.agent.elastic.schedule.ElasticInstanceScheduleManagerImpl">
        <constructor-arg ref="elasticInstanceScheduleDao" />
        <constructor-arg ref="elasticInstanceScheduleScheduler" />
      </bean>
    </property>
  </bean>
 
  <bean id="chartManager" class="com.atlassian.bamboo.charts.DefaultChartManager" plugin:available="true">
    <constructor-arg ref="pluginAccessor" />
    <constructor-arg ref="indexedBuildResultsSearcher" />
    <constructor-arg ref="planManager" />
    <constructor-arg ref="resultsSummaryManager" />
  </bean>

  <bean id="buildLoggerManager" class="com.atlassian.bamboo.build.logger.DefaultBuildLoggerManager">
    <constructor-arg ref="agentContext"/>
  </bean>

  <bean id="planParticleManager" class="com.atlassian.bamboo.plan.PlanParticleManagerImpl" plugin:available="true">
    <constructor-arg ref="planManager"/>
    <constructor-arg ref="planDependencyManager"/>
  </bean>

  <bean id="planScheduler" class="com.atlassian.bamboo.schedule.DefaultPlanScheduler"/>

  <bean id="latest25FiveBuildResultsFilter" class="com.atlassian.bamboo.builder.resultsfilter.Latest25FiveBuildResultsFilter">
    <constructor-arg ref="buildResultsSummaryManager"/>
  </bean>

  <bean id="buildResultsFilterFactory" class="com.atlassian.bamboo.builder.resultsfilter.BuildResultsFilterFactoryImpl">
      <constructor-arg index="0">
        <list>
          <ref bean="latest25FiveBuildResultsFilter"/>
          <bean class="com.atlassian.bamboo.builder.resultsfilter.AllBuildResultsFilter">
            <constructor-arg ref="resultsSummaryManager"/>
          </bean>
          <bean class="com.atlassian.bamboo.builder.resultsfilter.TimeAgoBuildResultsFilter">
            <constructor-arg value="7"/>
            <constructor-arg ref="resultsSummaryManager"/>
          </bean>
          <bean class="com.atlassian.bamboo.builder.resultsfilter.TimeAgoBuildResultsFilter">
            <constructor-arg value="30"/>
            <constructor-arg ref="resultsSummaryManager"/>
          </bean>
          <bean class="com.atlassian.bamboo.builder.resultsfilter.TimeAgoBuildResultsFilter">
            <constructor-arg value="90"/>
            <constructor-arg ref="resultsSummaryManager"/>
          </bean>
        </list>
      </constructor-arg>
      <constructor-arg index="1" ref="latest25FiveBuildResultsFilter"/>
  </bean>

  <bean id="planFavouriteService" class="com.atlassian.bamboo.plan.PlanFavouriteServiceImpl" plugin:available="true">
     <constructor-arg ref="labelManager"/>
  </bean>

  <bean id="rssFeedBuilder" class="com.atlassian.bamboo.rss.RssFeedBuilder">
    <constructor-arg ref="templateRenderer"/>
    <constructor-arg ref="triggerReasonManager"/>
    <constructor-arg ref="administrationConfigurationManager"/>
  </bean>

  <bean id="chainConversionService" class="com.atlassian.bamboo.chains.ChainConversionServiceImpl">
    <constructor-arg ref="testsManager"/>
    <constructor-arg ref="labelManager"/>
    <constructor-arg ref="auditLogService"/>
    <constructor-arg ref="commentManager"/>
    <constructor-arg ref="bandanaPersister"/>
  </bean>

  <bean id="secureTokenService" class="com.atlassian.bamboo.security.SecureTokenServiceImpl"/>

  <bean id="rememberMeService" class="com.atlassian.seraph.service.rememberme.DefaultRememberMeService" >
    <constructor-arg ref="rememberMeConfiguration"/>
    <constructor-arg ref="bambooRememberMeTokenDao" />
    <constructor-arg>
        <bean class="com.atlassian.seraph.service.rememberme.DefaultRememberMeTokenGenerator" />
    </constructor-arg>
  </bean>

  <bean id="artifactDefinitionManager" class="com.atlassian.bamboo.plan.artifact.ArtifactDefinitionManagerImpl">
    <constructor-arg ref="artifactDefinitionDao"/>
    <constructor-arg ref="planManager"/>
  </bean>

  <bean id="artifactSubscriptionManager" class="com.atlassian.bamboo.plan.artifact.ArtifactSubscriptionManagerImpl">
    <constructor-arg ref="artifactDefinitionManager"/>
    <constructor-arg ref="artifactSubscriptionDao"/>
    <constructor-arg ref="consumedSubscriptionDao"/>
    <constructor-arg ref="artifactLinkDao"/>
    <constructor-arg ref="resultsSummaryManager"/>
    <constructor-arg ref="secureTokenService"/>
  </bean>
  
  <bean id="variableDefinitionFactory" class="com.atlassian.bamboo.variable.VariableDefinitionFactoryImpl">
  </bean>

  <bean id="variableDefinitionManager" class="com.atlassian.bamboo.variable.VariableDefinitionManagerImpl" plugin:available="true">
    <constructor-arg ref="variableDefinitionDao"/>
    <constructor-arg ref="variableDefinitionFactory"/>
  </bean>

  <bean id="variableValidationService" class="com.atlassian.bamboo.variable.VariableValidationServiceImpl">
    <constructor-arg ref="textProvider"/>
    <constructor-arg ref="variableDefinitionManager"/>
  </bean>

  <bean id="taskManager" class="com.atlassian.bamboo.task.TaskManagerImpl">
    <constructor-arg ref="pluginAccessor"/>
  </bean>

  <bean id="taskConfigurationService" class="com.atlassian.bamboo.task.TaskConfigurationServiceImpl">
    <constructor-arg ref="buildDefinitionManager"/>
    <constructor-arg ref="taskManager"/>
    <constructor-arg ref="buildDefinitionConverter"/>
    <constructor-arg ref="textProvider"/>
    <constructor-arg ref="planManager"/>
  </bean>

  <bean id="gravatarService" class="com.atlassian.bamboo.user.gravatar.GravatarService" plugin:available="true">
		<constructor-arg ref="administrationConfigurationManager"/>
  </bean>
  <!-- Trusted Apps -->

  <bean id="encryptionProvider" class="com.atlassian.security.auth.trustedapps.BouncyCastleEncryptionProvider" plugin:available="true"/>
  
  <bean id="bambooTrustedApplicationsManager" class="com.atlassian.bamboo.security.trustedapplications.BambooTrustedApplicationsManager" plugin:available="true">
    <constructor-arg ref="encryptionProvider"/>
    <constructor-arg ref="administrationConfiguration"/>
    <constructor-arg ref="bambooTrustedApplicationsHibernateDao"/>
  </bean>

  <bean id="authenticationListener" class="com.atlassian.bamboo.security.trustedapplications.BambooAuthenticationListener" plugin:available="true"/>
  <bean id="authenticationController" class="com.atlassian.bamboo.security.trustedapplications.BambooAuthenticationController" plugin:available="true"/>
  <bean id="bambooUserResolver" class="com.atlassian.bamboo.security.trustedapplications.BambooUserResolver" plugin:available="true">
    <constructor-arg ref="bambooUserManager"/>
  </bean>
    
  <!-- End trusted apps -->
  
  <bean id="pluginHibernateSessionFactory" parent="txReadWriteProxy" plugin:available="true">
    <property name="target">
      <bean class="com.atlassian.bamboo.persistence3.SpringPluginHibernateSessionFactory">
        <constructor-arg ref="sessionFactory"/>
      </bean>
    </property>
  </bean>

  <bean id="legacyBuilderToTaskConverterService" class="com.atlassian.bamboo.task.conversion.LegacyBuilderToTaskConverterServiceImpl">
    <constructor-arg ref="pluginAccessor"/>
  </bean>
</beans>
